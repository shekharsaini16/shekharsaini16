from flask import Flask, request, send_file
import snowflake.connector
import pandas as pd

app = Flask(__name__)

@app.route('/import', methods=['POST'])
def import_data():
    schema = request.form['schema']
    table_name = request.form['table_name']
    file_format = request.form['file_format']
    file_data = request.files['file'].read()

    # Connect to Snowflake
    conn = snowflake.connector.connect(
        user='<username>',
        password='<password>',
        account='<account>',
        warehouse='<warehouse>',
        database='<database>',
        schema='<schema>'
    )

    # Create a DataFrame from the file data
    if file_format == 'csv':
        df = pd.read_csv(file_data)
    elif file_format == 'json':
        df = pd.read_json(file_data)
    # Add more formats as needed

    # Create the table if it doesn't exist
    with conn.cursor() as cur:
        cur.execute(f'CREATE TABLE IF NOT EXISTS {schema}.{table_name} (')
        for col in df.columns:
            cur.execute(f'{col} STRING,')
        cur.execute(')')

    # Insert the data into the table
    df.to_sql(table_name, conn, if_exists='append', index=False)

    return 'File uploaded successfully'

@app.route('/export', methods=['GET'])
def export_data():
    schema = request.args.get('schema')
    table_name = request.args.get('table_name')
    file_format = request.args.get('file_format')
    sql_query = request.args.get('sql_query')

    # Connect to Snowflake
    conn = snowflake.connector.connect(
        user='<username>',
        password='<password>',
        account='<account>',
        warehouse='<warehouse>',
        database='<database>',
        schema='<schema>'
    )

    if sql_query is None:
        sql_query = f'SELECT * FROM {schema}.{table_name}'

    # Fetch the data using the SQL query
    df = pd.read_sql_query(sql_query, conn)

    # Convert the data to the requested file format
    if file_format == 'csv':
        file_data = df.to_csv(index=False)
        file_ext = 'csv'
    elif file_format == 'json':
        file_data = df.to_json(orient='records')
        file_ext = 'json'
    # Add more formats as needed

    return send_file(file_data, mimetype=f'text/{file_ext}', attachment_filename=f'{table_name}.{file_ext}', as_attachment=True)
